<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>scad</string>
	</array>
	<key>name</key>
	<string>OpenSCAD</string>
	<key>foldingStartMarker</key>
	<string>(?x)
		 /\*\*(?!\*)
		|^(?![^{]*?//|[^{]*?/\*(?!.*?\*/.*?\{)).*?\{\s*($|//|/\*(?!.*?\*/.*\S))
	</string>
	<key>foldingStopMarker</key>
	<string>(?&lt;!\*)\*\*/|^\s*\}</string>

	<key>patterns</key>
	<array>
		<dict>
			<key>match</key>
			<string>//.*$</string>
			<key>name</key>
			<string>comment.line.scad</string>
		</dict>

		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>meta.toc-list.banner.block.scad</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^/\* =(\s*.*?)\s*= \*/$\n?</string>
			<key>name</key>
			<string>comment.block.scad</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>/\*</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.scad</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\*/</string>
			<key>name</key>
			<string>comment.block.scad</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\*/.*\n</string>
			<key>name</key>
			<string>invalid.illegal.stray-comment-end.scad</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>meta.toc-list.banner.line.scad</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^// =(\s*.*?)\s*=\s*$\n?</string>
			<key>name</key>
			<string>comment.line.banner.scad</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>//</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.scad</string>
				</dict>
			</dict>
			<key>end</key>
			<string>$\n?</string>
			<key>name</key>
			<string>comment.line.double-slash.scad</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?&gt;\\\s*\n)</string>
					<key>name</key>
					<string>punctuation.separator.continuation.scad</string>
				</dict>
			</array>
		</dict>



		<dict>
			<key>begin</key>
			<string>(union|difference|intersection|render)\s*\(</string>
			<key>comment</key>
			<string>CSG modeling operations</string>
			<key>end</key>
			<string>\)</string>
			<key>name</key>
			<string>entity.name.function.boolean.scad</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
				<dict>
					<key>match</key>
					<string>.</string>
					<key>name</key>
					<string>storage.type.scad</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(cube|sphere|cylinder|polyhedron)\s*\(</string>
			<key>comment</key>
			<string>Primitive solids</string>
			<key>end</key>
			<string>\)</string>
			<key>name</key>
			<string>entity.name.function.solids.scad</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
				<dict>
					<key>match</key>
					<string>.</string>
					<key>name</key>
					<string>storage.type.scad</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(square|circle|polygon|import_dxf)\s*\(</string>
			<key>comment</key>
			<string>Primitive 2D shapes</string>
			<key>end</key>
			<string>\)</string>
			<key>name</key>
			<string>entity.name.function.shapes.scad</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
				<dict>
					<key>match</key>
					<string>.</string>
					<key>name</key>
					<string>storage.type.scad</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(linear_extrude|rotate_extrude)\s*\(</string>
			<key>comment</key>
			<string>3D from 2D shapes</string>
			<key>end</key>
			<string>\)</string>
			<key>name</key>
			<string>entity.name.function.extrude.scad</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
				<dict>
					<key>match</key>
					<string>.</string>
					<key>name</key>
					<string>storage.type.scad</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(translate|rotate|mirror|multmatrix)\s*\(</string>
			<key>comment</key>
			<string>Physical operations that preserve shape</string>
			<key>end</key>
			<string>\)</string>
			<key>name</key>
			<string>entity.name.function.movement.scad</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
				<dict>
					<key>match</key>
					<string>.</string>
					<key>name</key>
					<string>storage.type.scad</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(scale|resize)\s*\(</string>
			<key>comment</key>
			<string>Physical operations that modify shape</string>
			<key>end</key>
			<string>\)</string>
			<key>name</key>
			<string>entity.name.function.size.scad</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
				<dict>
					<key>match</key>
					<string>.</string>
					<key>name</key>
					<string>storage.type.scad</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(color)\s*\(</string>
			<key>comment</key>
			<string>Aspect change like color and textures</string>
			<key>end</key>
			<string>\)</string>
			<key>name</key>
			<string>entity.name.function.aspect.scad</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
				<dict>
					<key>match</key>
					<string>.</string>
					<key>name</key>
					<string>storage.type.scad</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(minkowski|hull)\s*\(</string>
			<key>comment</key>
			<string>The elegant and hard to use shaping functions</string>
			<key>end</key>
			<string>\)</string>
			<key>name</key>
			<string>entity.name.function.advanced.scad</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
				<dict>
					<key>match</key>
					<string>.</string>
					<key>name</key>
					<string>storage.type.scad</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(cos|sin|tan|acos|asin|atan|atan2|abs|ceil|floor|ln|len|log|lookup|max|min|norm|pow|rands|round|sign|sqrt|exp)\(</string>
			<key>comment</key>
			<string>Math functions</string>
			<key>end</key>
			<string>\)</string>
			<key>name</key>
			<string>entity.name.function.math.scad</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
				<dict>
					<key>match</key>
					<string>.</string>
					<key>name</key>
					<string>storage.type.scad</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(echo|str|for|intersection_for|if|assign|render|surface|projection|search)\s*\(</string>
			<key>comment</key>
			<string>Control like loops</string>
			<key>end</key>
			<string>\)</string>
			<key>name</key>
			<string>keyword.control.scad</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
				<dict>
					<key>match</key>
					<string>.</string>
					<key>name</key>
					<string>storage.type.scad</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>comment</key>
			<string>Modules</string>
			<key>match</key>
			<string>(module|function|\$f[ans]|\$t|\$vp[rt]|include|use|import)</string>
			<key>name</key>
			<string>keyword.other.scad</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Debug characters</string>
			<key>match</key>
			<string>(#|%|!)</string>
			<key>name</key>
			<string>keyword.operator.debug.scad</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>All other numbers</string>
			<key>match</key>
			<string>\d+\.?\d*</string>
			<key>name</key>
			<string>constant.numeric.scad</string>
		</dict>
	</array>
	<key>scopeName</key>
	<string>source.scad</string>
	<key>uuid</key>
	<string>23739230-3691-487c-9aca-c993d60ff734</string>
</dict>
</plist>
